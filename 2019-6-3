#define _CRT_SECURE_NO_WARNINGS 1

#include<iostream>
#include<vector>
using namespace std;

/*                                  A,B,C 分糖果
int main()
{
	int a ; 
	int b = 0;
	int c = 0;
	vector<int> v;
	v.resize(4);
	for (int i = 0; i < 4; i++)
	{		
		cin >> v[i];	
	}
	
	 a = (v[0] + v[2]) / 2;
	 c = (v[3] - v[1]) / 2;
	 b = (v[2] - v[0]) / 2;
	int b1 = (v[1] + v[3]) / 2;
	if (b != b1)
	{
		cout << "no" << endl;
	}
	else
	cout << a << " " << b << " "<< c << endl;

	system("pause");
	return 0;
}
*/

//
//int o(int N, int i = 0)
//{
//
//	return N^i+o(N,i++);
//}
//
//int main()
//{
//
//	int M, N;
//	cin >> M >> N;
//	M=o(N);
//	int ret = o(N);
//	cout << ret << endl;
//	system("pause");
//	return 0;
//}




/*
#define _CRT_SECURE_NO_WARNINGS 1

#include<iostream>
#include<string>
using namespace std;


bool huiwen(string str)
{
	int begin = 0;
	int end = str.size() - 1;
	while (begin <= end)
	{
		if (str[begin] == str[end])
		{
			begin++;
			end--;
		}
		else
			break;
	}
	if (begin < end)
	{
		return false;
	}
	else
		return true;
}


int main()
{
	string str1, str2;

	while (cin >> str1 &&cin >> str2)
	{
		int count = 0;
		for (int i = 0; i <= str1.size(); i++)
		{
			string str3 = str1;
			str3.insert(i, str2);
			if (huiwen(str3))
				count++;
		}
		cout << count << endl;

	}

	//	system("pause");
	//	return 0;
}

*/

/*
void panduan(char s[])
{
	if()
}
int main()
{
	int n;
	char s[100];
	cin >> n;
	for (int i = 0; i < n; i++)
	{		
		cin >> s[][];	
	}
	
	panduan(s);

	system("pause");
	return 0;


}
*/

void main()
{
	int n[][3] = { 10,20,30,40,50,60 };
	int (*p)[3];
	p = n;
	cout << p[0][0] << ";" <<  *(p[0] + 1) << ";"<<(*p)[2] << endl;
	system("pause");
}
